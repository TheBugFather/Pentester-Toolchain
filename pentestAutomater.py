# Built-In Modules #
import re
import sys

# External Modules #


# Custom Modules #
import Modules.Globals as Globals
from Modules.Utils import PrintErr


"""
########################################################################################################################
Name:       main
Purpose:    Facilitate various scans and pentesting tools, saving output results, and chaining tool executions based \
            on regular expression parsing on scan output.
Parameters: Nothing
Returns:    Nothing
########################################################################################################################
"""
def main():
    filename = './nmapSampleOutputs/blueprint_nmapOut.txt'

    # Compile regex #
    re_web = re.compile(r'^(?:80|443)/tcp    open')

    # Set toggles #
    web_toggle = False

    # If file exists and has read access #
    if Globals.FileCheck(filename) and Globals.FileHasRead(filename):
        try:
            # Open the file in read mode #
            with open(filename, 'r') as in_file:
                # Iterate through file line by line #
                for line in in_file:
                    # If the current line matches open web ports #
                    if re.search(re_web, line):
                        # Set the web testing toggle to true #
                        web_toggle = True

        # If error occurs during file operation #
        except (IOError, OSError) as err:
            PrintErr(f'File IO Error - {err}')
            sys.exit(1)

    # If web testing to be executed #
    if web_toggle:
        print('Open web ports regex successfully matched!')

    sys.exit(0)


if __name__ == '__main__':
    main()





# Keep this empty function header for future use when creating functions #

"""
########################################################################################################################
Name:
Purpose:
Parameters:
Returns:
########################################################################################################################
"""
