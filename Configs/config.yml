# Scan variables #
init:
  min_cores: 2
  hosts: []
  cidr: null
  ports: []
  nmap_init: [
    "nmap -vv -Pn -n -sS -T4 -D RND:128 --mtu 16 --data-length 25 <ip>",
    "nmap -vv -Pn -n -sU -T4 -D RND:128 --mtu 16 --data-length 25 <ip>",
    "nmap -vv -Pn -n -sV --version-all -sC -T4 -D RND:128 --data-length 25 <ip>"
  ]
  nmap_final: "nmap -vv -Pn -n -p- -T4 -D RND:128 --mtu 16 --data-length 25 <ip>"
  custom_program_path: "CustomPrograms"
  generate_markdown: False


# TCP based ports #
ftp:
  commands: [
    "nc -vn <ip> <port>",
    "openssl s_client -connect <ip>:<port> -starttls ftp",
    "wget --mirror ftp://anonymous:anonymous@<ip>",
    "wget --mirror --no-passive ftp://anonymous:anonymous@<ip>",
    "nmap -vv -Pn -n -sV --script=\"ftp-* and not (brute or libopie)\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/anonymous; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/bison_ftp_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/colorado_ftp_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/easy_file_sharing_ftp; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/ftp_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/konica_ftp_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/pcman_ftp_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/titanftp_xcrc_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ssh:
  commands: [
    "nc -vn <ip> <port>",
    "nmap -vv -Pn -n -sV --script=\"ssh-* and not (brute or run)\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/eaton_xpert_backdoor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/fortinet_backdoor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/juniper_backdoor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/detect_kippo; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/ssh_enumusers; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/ssh_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/ssh_enum_git_keys; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/libssh_auth_bypass; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: [
    "python <path>/ssh-audit/ssh-audit.py <ip>"
  ]

telnet:
  commands: [
    "nmap -vv -Pn -n -sV --script\"telnet-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/telnet/brocade_enable_login; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/telnet/lantronix_telnet_password; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/telnet/lantronix_telnet_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/telnet/telnet_ruggedcom; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/telnet/satel_cmd_exec; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/telnet/telnet_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/telnet/telnet_encrypted_overflow; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

smtp:
  commands: [
    "nc -vn <ip> <port>",
    "nmap -vv -Pn -n -sV --script=\"smtp-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "openssl s_client -crlf -connect <ip>:<port>",
    "openssl s_client -starttls smtp -crlf -connect <ip>:<port>",
    "dig +short mx <domain>",
    "msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_ntlm_domain; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_relay; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "mailspoof -d <domain>"
  ]
  custom_commands: []

whois:
  commands: [
    "whois -h <ip> -p <port> <domain>",
    "echo <domain> | nc -vn <ip> <port>",
    "nmap -vv -Pn -n -sV --script=\"whois-*\" -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

finger:
  commands: [
    "nc -vn <ip> <port>",
    "finger @<ip>",
    "finger admin@<ip>",
    "nmap -vv -Pn -n -sV --script=\"finger\" -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

web:
  commands: [
    "nmap -vv --reason -Pn -n -sV --script=\"banner,(http* or ssl*) and not (brute or broadcast or dos or external or http-slowloris* or fuzzer)\" -D RND:128 --data-length 25 -p <port> <ip>",
    "nikto -ip <proto>://<ip>",
    "gobuster dir -u <ip>:<port> -t 50 --random-agent -w /usr/share/dirb/wordlists/common.txt --status-codes-blacklist \"301,404\"",
    "whatweb -a 4 <ip>",
    "ffuf -w /usr/share/dirb/wordlists/common.txt:FUZZ -u <proto>://<ip> -H \"Host: FUZZ.<ip>\" -c -mc all",
    "msfconsole -q -x 'use auxiliary/scanner/http/trace; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/git_scanner; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/http_header; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/host_header_injection; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/open_proxy; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/options; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/robots_txt; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/cert; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/http_hsts; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/svn_scanner; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/verb_auth_bypass; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/http_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/vhost_scanner; set DOMAIN <domain>; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/web_vulndb; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

pop3:
  commands: [
    "nc -nv <ip> <port>",
    "openssl s_client -connect <ip>:<port> -crlf -quiet",
    "nmap -vv -Pn -n -sV --script=\"pop3-capabilities or pop3-ntlm-info\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/pop3/pop3_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ident:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"auth-owners,auth-spoof\" -D RND:128 --data-length 25 -p <port> <ip>",
    "ident-user-enum <ip> <port>"
  ]
  custom_commands: []

nntp:
  commands: [
    "nc -n <ip> <port>",
    "openssl s_client -crlf -connect <ip>:<port>",
    "nmap -vv -Pn -n -sV --script=nntp-ntlm-info -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

imap:
  commands: [
    "nc -nv <ip> <port>",
    "openssl s_client -connect <ip>:<port> -quiet",
    "nmap -vv -Pn -n -sV --script\"imap-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/imap/imap_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

smux:
  commands: [
    "snmpwalk -c public -v1 -t 10 <ip>"
  ]
  custom_commands: []

checkpoint-firewall:
  commands: [
    "msfconsole -q -x 'use auxiliary/gather/checkpoint_ipname; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

smb:
  commands: [
    "nbtscan <ip>",
    "smbmap -H <ip>",
    "smbmap -H <ip> -u null -p null",
    "smbmap -H <ip> -u guest",
    "smbclient -N -L //<ip>",
    "smbclient -N //<ip>/ --option=\"client min protocol\"=LANMAN1",
    "rpcclient <ip>",
    "rpcclient -U \"\" <ip>",
    "enum4linux -a <ip>",
    "crackmapexec smb <ip>",
    "crackmapexec smb <ip> --pass-pol -u \"\" -p \"\"",
    "crackmapexec smb <ip> --pass-pol -u \"guest\" -p \"\"",
    "nmap -vv -Pn -n -sV --script=\"(smb-* or smb2-*) and not (brute or enum-domains or enum-processes or flood or psexec or vuln-conficker or vuln-cve2009-3103 or vuln-ms08-067 or vuln-regsvc-dos)\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_enumusers_domain; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_enum_gpp; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_lookupsid; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/pipe_auditor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/pipe_dcerpc_auditor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_enumshares; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_enumusers; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_uninit_cred; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

modbus:
  commands: [
    "nmap -vv -Pn -n -sV --script modbus-discover -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/scada/modbus_banner_grabbing; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/scada/modbusclient; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/scada/modbus_findunitid; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/scada/modbusdetect; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

rlogin:
  commands: [
    "rlogin <ip> -l root"
  ]
  custom_commands: []

rsh:
  commands: [
    "rsh <ip> echo"
  ]
  custom_commands: []

apple_filing:
  commands: [
    "nmap -vv -Pn -n -sV --script \"afp-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/afp/afp_server_info; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

rtsp:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"rtsp-*\" -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

cups:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"cups-*\" -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

rsync:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"rsync-list-modules\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/rsync/modules_list; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

java_rmi:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"rmi-*\" -D RND:128 -p --data-length 25 <port> <ip>",
    "msfconsole -q -x 'use auxiliary/gather/java_rmi_registry; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/misc/java_rmi_server; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

mssql:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"ms-sql-* and not brute\" --script-args mssql.instance-port=<port>,mssql.username=sa,mssql.password=,mssql.instance-name=MSSQLSERVER -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/mssql/mssql_hashdump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mssql/mssql_ping; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mssql/mssql_schemadump; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

oracle_db:
  commands: [
    "nmap -vv -Pn -n -sV --script \"oracle-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/oracle/tnspoison_checker; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/oracle/sid_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/oracle/tnslsnr_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "oscanner -s <ip> -P <port>"
  ]
  custom_commands: []


oracle_xml_db:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/oracle/xdb_sid; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "oscanner -s <ip> -P <port>"
  ]
  custom_commands: []


docker:
  commands: [
    "nmap -vv -Pn -n -sV --script=docker-version -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/http/docker_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "docker -H <ip>:<port> ps -a"
  ]
  custom_commands: []

squid:
  commands: []
  custom_commands: [
    "python <path>/spose/spose.py --proxy http://<ip>:<port> --target <ip>"
  ]

iscsi:
  commands: [
    "nmap -vv -Pn -n -sV --script=iscsi-info -D RND:128 --data-length 25 -p <port> <ip>",
    "iscsiadm -m discovery -t sendtargets -p <ip>:<port>"
  ]
  custom_commands: []

sap_router:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/sap/sap_service_discovery; set RHOSTS <ip>; set INSTANCES 00-99; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/sap/sap_router_info_request; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

sql:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"mysql-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_hashdump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_schemadump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_authbypass_hashdump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/admin/mysql/mysql_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/admin/mysql/mysql_sql; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

rdp:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"rdp-*\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/rdp/cve_2019_0708_bluekeep; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/rdp/rdp_scanner; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/rdp/ms12_020_check; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

distcc:
  commands: [
    "nmap -vv -Pn -n -sV --script=distcc-exec --script-args=\"distcc-exec.cmd=\'id\'\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use exploit/unix/misc/distcc_exec; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

subversion:
  commands: [
    "nc -vn <ip> <port>",
    "msfconsole -q -x 'use auxiliary/scanner/http/svn_scanner; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "svn ls svn://<ip>",
    "svn log svn://<ip>",
    "svn checkout svn://<ip>",
    "svn up -r 2"
  ]
  custom_commands: []

epmd:
  commands: [
    "nmap -vv -Pn -n -sV --script=epmd-info -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

cisco_smart_install:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/misc/cisco_smart_install; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: [
    "python <path>/SIETpy3/siet.py -g -i <ip>"
  ]

postgresql:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/postgres/postgres_dbname_flag_injection; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/postgres/postgres_sql; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/postgres/postgres_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/postgres/postgres_hashdump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/postgres/postgres_schemadump; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

redshift:
  commands: [
    "aws redshift describe-clusters"
  ]
  custom_commands: []

vnc:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"(realvnc-auth-bypass or vnc-*) and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/vnc/vnc_none_auth; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

winrm:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/winrm/winrm_auth_methods; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/winrm/winrm_cmd; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/winrm/winrm_wql; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

x11:
  commands: [
    "nmap -vv -Pn -n -sV --script=x11-access -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -x -q 'use auxiliary/scanner/x11/open_x11; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

redis:
  commands: [
    "nmap -vv -Pn -n -sV --script=redis-info -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/redis/redis_server; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/gather/redis_extractor; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

java_debug_wire:
  commands: [
    "nmap -vv -Pn -n -sT --script=+jdwp-info -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

apache_jserv:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"ajp-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

influxdb:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/http/influxdb_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []
]

bitcoin:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"bitcoin*\" -D RND:128 --data-length 25 -p <port> <ip>",
  ]
  custom_commands: []

apache_casandra:
  commands: [
    "nmap -vv -Pn -n -sV --script=cassandra-info -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

raw_printing:
  commands: [
    "nmap -vv -Pn -n -sV --script=pjl-ready-message -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_list_dir; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_env_vars; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_delete_file; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_download_file; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_upload_file; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_ready_message; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_version_info; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_list_volumes; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

elastic_search:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/elasticsearch/indices_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/http/elasticsearch_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ndmp:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"ndmp-*\" -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

memcache:
  commands: [
    "nmap -vv -Pn -n -sV --script=memcached-info -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/gather/memcached_extractor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/memcached/memcached_amp; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

gluster_fs:
  commands: [
    "gluster --remote-host=<ip> volume list"
  ]
  custom_commands: []

mongo_db:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"mongodb-* and not brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/gather/mongodb_js_inject_collection_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

hadoop:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"hadoop-*\" -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []


# UDP based ports #
dhcp:
  commands: [
    "nmap -vv -Pn -n -sV --script=dhcp-discover -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

tftp:
  commands: [
    "nmap -vv -Pn -n -sU --script tftp-enum -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/admin/tftp/tftp_transfer_until; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ruserd:
  commmands: [
    "nmap -vv -Pn -n -sV --script=rusers -D RND:128 --data-length 25 -p <port> <ip>",
    "rusers -l <ip>"
  ]
  custom_commands: []

ws_discovery:
  commands: [
    "nmap -vv -Pn -n -sV --script=wsdd-discover -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/wsdd/wsdd_query; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

mdns:
  commands: [
    "nmap -vv -Pn -n -sUC -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/mdns/query; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: [
    "python <path>/Pholus/pholus3.py eth0 -rq -stimeout 10"
  ]

bacnet:
  commands: [
    "nmap -vv -Pn -n -sU -sV --script=bacnet-info --script-args full=yes -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/scada/bacnet_l3; set PORT <port>; run; exit'"
  ]
  custom_commands: []


# TCP/UDP based ports #
dns:
  commands: [
    "dnsrecon -d <domain>",
    "dig axfr @<ip> && dix axfr @<ip> <domain> && fierce -dns <domain>",
    "dig -t _gc._<domain> && dig -t _ldap._<domain> && dig -t _kerberos._<domain> && dig -t _kpasswd._<domain>",
    "nmap -vv -Pn -n -sV --script=dns-blacklist --script-args=dns-blacklist.ip=\'<ip>\' -D RND:128 -p <port>",
    "nmap -vv -Pn -n -sU --script=dns-cache-snoop --script-args=dns-cache-snoop.mode=timed,dns-cache-snoop.domains=\'<domain>\' -D RND:128 --data-length 25 -p <port> <ip>",
    "nmap -vv -Pn -n -sSU --script=dns-nsid -D RND:128 --data-length 25 -p <port> <ip>",
    "nmap -vv -Pn -n -sU --script=dns-recursion -D RND:128 --data-length 25 -p <port> <ip>",
    "nmap -vv -Pn -n -sV --script=dns-srv-enum --script-args=dns-srv-enum.domain=\'<domain>\' -D RND:128 --data-length 25 -p <port>",
    "msfconsole -q -x 'use auxiliary/scanner/dns/dns_amp; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/gather/enum_dns; set DOMAIN <domain>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

kerberos:
  commands: [
    "nmap -vv -Pn -n -sV --script=krb5-enum-users --script-args krb5-enum-users.realm=\'<domain>\' -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

rpc:
  commands: [
    "whois -h <domain> -p 43 && echo <domain> | nc -vn <ip> 43",
    "nmap -vv -Pn -n -sSUC --script=rpc-grind,rpcinfo -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

ntp:
  commands: [
    "nmap -vv -Pn -n -sU --script=ntp-info -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/ntp/ntp_nak_to_the_future; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ntp/ntp_req_nonce_dos; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ntp/ntp_unsettrap_dos; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ntp/reslist_dos; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ntp/peer_list_dos; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ntp/peer_list_sum_dos; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "ntpq -c readlist <ip>",
    "ntpq -c readvar <ip>",
    "ntpq -c peers <ip>",
    "ntpq -c associations <ip>",
    "ntpdc -c monlist <ip>",
    "ntpdc -c listpeers <ip>",
    "ntpdc -c sysinfo <ip>"
  ]
  custom_commands: []

msrpc:
  commands: [
    "nmap -vv -Pn -n -sV --script=msrpc-enum -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/dcerpc/tcp_dcerpc_auditor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/dcerpc/endpoint_mapper; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/dcerpc/hidden; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/dcerpc/windows_deployment_services; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/dcerpc/management; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

netbios:
  commands: [
    "nmblookup -A <ip>",
    "nbtscan <ip>/30",
    "nmap -vv -Pn -n -sU -sV --script=nbns-interfaces,nbstat -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/netbios/nbname; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

snmp:
  commands: [
    "snmp-check <ip>",
    "nmap -vv -Pn -n -sV --script=\"snmp* and not snmp-brute\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/snmp/snmp_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/snmp/snmp_set; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/snmp/snmp_enumshare; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/snmp/snmp_enumusers; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

irc:
  commands: [
    "nc -vn <ip> <port>",
    "openssl s_client -connect <ip>:<port> -quiet",
    "nmap -vv -Pn -n -sV --script=irc-botnet-channels,irc-info,irc-unrealircd-backdoor -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

ldap:
  commands: [
    "nmap -vv -Pn -n -sV --script=ldap-rootdse,ldap-search -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/gather/ldap_hashdump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/gather/ldap_query; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/gather/ldap_esc_vulnerable_cert_finder; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "ldapsearch -H ldap://<ip> -x",
    "ldapsearch -H ldap://<ip> -x -s base namingcontexts"
  ]
  custom_commands: []

ipsec_ike_vpn/pptp:
  commands: [
    "nmap -vv -Pn -n -sSUV -D RND:128 --data-length 25 -p <port> <ip>",
    "ike-scan --dport=<port> --auth=1 <ip>",
    "ike-scan --dport=<port> --auth=3 <ip>",
    "ike-scan --dport=<port> --auth=64221 <ip>"
  ]
  custom_commands: []

ipmi:
  commands: [
    "nmap -vv -Pn -n -sU --script=ipmi-cipher-zero,ipmi-version -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/ipmi/ipmi_cipher_zero; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use  auxiliary/scanner/ipmi/ipmi_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

socks_proxy:
  commands: [
    "nmap -vv -Pn -n -sV --script socks-auth-info -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []

nfs:
  commands: [
    "nmap -vv -Pn -n -sV --script=\"nfs-*\" -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/nfs/nfsmount; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "showmount -e <ip>"
  ]
  custom_commands: []

rabbit_mq:
  commands: [
    "nmap -vv -Pn -n -sV --script=amqp-info -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/amqp/amqp_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

couchdb:
  commands: [
    "nmap -vv -Pn -n -sV --script=couchdb-databases,couchdb-stats -D RND:128 --data-length 25 -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/couchdb/couchdb_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ethernet_ip:
  commands: [
    "nmap -vv -Pn -n -sV --script=enip-info -D RND:128 --data-length 25 -p <port> <ip>"
  ]
  custom_commands: []