# Scan variables #
init:
  min_cores: 2
  hosts: []
  cidr: null
  ports: []
  nmap_init: [
    "nmap -vv -Pn -n -sS -T4 -f --data-length 25 <ip>",
    "nmap -vv -Pn -n -sU -T4 -f --data-length 25 <ip>",
    "nmap -vv -Pn -n -sV -sC -T4 -f --data-length 25 <ip>"
  ]
  nmap_final: "nmap -vv -Pn -n -T4 -p- -f --data-length 25 <ip>"
  custom_program_path: "CustomPrograms"
  generate_markdown: False

# TODO: after finishing initial tooling, double check nmap and metasploit options, add nuclei scans and address unfinished services or remove them

# TCP based ports #
ftp:
  commands: [
    "nc -vn <ip> <port>",
    "openssl s_client -connect <ip>:<port> -starttls ftp",
    "wget --mirror ftp://anonymous:anonymous@<ip>",
    "wget --mirror --no-passive ftp://anonymous:anonymous@<ip>",
    "nmap --script ftp-* -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/anonymous; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/ftp_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/bison_ftp_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/colorado_ftp_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ftp/titanftp_xcrc_traversal; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ssh:
  commands: [
    "nc -vn <ip> <port>",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/ssh_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use scanner/ssh/ssh_enumusers; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/ssh/juniper_backdoor; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: [
    "python <path>/ssh-audit/ssh-audit.py <ip>"
  ]

telnet:
  # TODO try to add non-blocking commands from methodology manually to prevent issues
  commands: []
  custom_commands: []

smtp:
  commands: [
    "nc -vn <ip> <port>",
    "nmap --script=smtp-commands,smtp-enum-users,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764 -p <port> <ip>",
    "openssl s_client -crlf -connect <ip>:<port>",
    "openssl s_client -starttls smtp -crlf -connect <ip>:<port>",
    "dig +short mx <domain>",
    "msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_ntlm_domain; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_relay; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "mailspoof -d <domain>"
  ]
  custom_commands: []

whois:
  commands: [
    "whois -h <ip> -p <port> <domain>",
    "echo <domain> | nc -vn <ip> <port>"
  ]
  custom_commands: []

finger:
  commands: [
    "nc -vn <ip> <port>",
    "finger @<ip>",
    "finger admin@<ip>"
  ]
  custom_commands: []

web:
# TODO manually add more web tools from methodology, update gobuster and ffuf used wordlists
  commands: [
    "nmap -vv --reason -Pn -sV -p <port> --script=`banner,(http* or ssl*) and not (brute or broadcast or dos or external or http-slowloris* or fuzzer)` <ip>",
    "nikto -ip <proto>://<ip>",
    "gobuster dir -u <ip>:<port> -t 50 --random-agent -w /usr/share/dirb/wordlists/common.txt --status-codes-blacklist \"301,404\"",
    "whatweb -a 4 <ip>",
    "ffuf -w /usr/share/dirb/wordlists/common.txt:FUZZ -u <proto>://<ip> -H \"Host: FUZZ.<ip>\" -c -mc all"
  ]
  custom_commands: []

pop3:
  commands: [
    "nc -nv <ip> <port>",
    "openssl s_client -connect <ip>:<port> -crlf -quiet",
    "nmap --script \"pop3-capabilities or pop3-ntlm-info\" -sV -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/pop3/pop3_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ident:
  commands: [
    "ident-user-enum <ip> <port>"
  ]
  custom_commands: []

nntp:
  commands: [
    "nc -n <ip> <port>",
    "openssl s_client -crlf -connect <ip>:<port>"
  ]
  custom_commands: []

imap:
  commands: [
    "nc -nv <ip> <port>",
    "openssl s_client -connect <ip>:<port> -quiet",
    "msfconsole -q -x 'use auxiliary/scanner/imap/imap_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

smux:
  commands: [
    "snmpwalk -c public -v1 -t 10 <ip>"
  ]
  custom_commands: []

checkpoint-firewall:
  commands: [
    "msfconsole -q -x 'use auxiliary/gather/checkpoint_ipname; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

smb:
  commands: [
    "nbtscan <ip>",
    "smbmap -H <ip>",
    "smbmap -H <ip> -u null -p null",
    "smbmap -H <ip> -u guest",
    "smbclient -N -L //<ip>",
    "smbclient -N //<ip>/ --option=\"client min protocol\"=LANMAN1",
    "rpcclient <ip>",
    "rpcclient -U \"\" <ip>",
    "enum4linux -a <ip>",
    "crackmapexec smb <ip>",
    "crackmapexec smb <ip> --pass-pol -u \"\" -p \"\"",
    "crackmapexec smb <ip> --pass-pol -u \"guest\" -p \"\"",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/smb/smb2; set RHOSTS <ip>; set RPORT <port>; run; exit'",
  ]
  custom_commands: []

modbus:
  commands: [
    "nmap --script modbus-discover -p 502 <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/scada/modbusdetect; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/scada/modbus_findunitid; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

rexec:
  commmands: []
  custom_commands: []

rlogin:
  commands: [
    "rlogin <ip> -l root"
  ]
  custom_commands: []

rsh:
  commands: [
    "rsh <ip> echo"
  ]
  custom_commands: []

lpd:
  commands: []
  custom_commands: []

apple_filing:
  commands: [
    "nmap -sV --script \"afp-* and not dos and not brute\" -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/afp/afp_server_info; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

rtsp:
  commands: [
    "nmap -sV --script \"rtsp-*\" -p <port> <ip>"
  ]
  custom_commands: []

cups:
  commands: []
  custom_commands: []

kerberos_v5_admin_tcp:
  commands: []
  custom_commands: []

kerberos_v4_passwd_tcp:
  commands: []
  custom_commands: []

rsync:
  commands: [
    "nmap -sV --script \"rsync-list-modules\" -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/rsync/modules_list; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

iis:
  commands: [
    "showmount -e <ip>",
    "nmap --script=nfs-ls.nse,nfs-showmount.nse,nfs-statfs.nse -p <port> <ip>"
  ]
  custom_commands: []

java_rmi:
  commands: []
  custom_commands: []

mssql:
  commands: [
    "nmap --script ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes --script-args mssql.instance-port=<port>,mssql.username=sa,mssql.password=,mssql.instance-name=MSSQLSERVER -sV -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/mssql/mssql_ping; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

oracle_db:
  commands: [
    "nmap --script \"oracle-tns-version\" -p <port> -T4 -sV <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/oracle/tnslsnr_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

pptp:
  commands: [
    "nmap -Pn -sSV -p1723 <ip>"
  ]
  custom_commands: []

mosquito:
  commands: []
  custom_commands: []

oracle_xml_db:
  commands: []
  custom_commands: []

insight_manager:
  commands: []
  custom_commands: []

docker:
  commands: [
    "nmap -sV --script \"docker-*\" -p <port> <ip>",
    "msfconsole -q -x 'use exploit/linux/http/docker_daemon_tcp; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "docker -H <ip>:<port> ps -a"
  ]
  custom_commands: []

squid:
  commands: []
  custom_commands: [
    "python <path>/spose/spose.py --proxy http://<ip>:3128 --target <ip>"
  ]

iscsi:
  commands: [
    "nmap -sV --script=iscsi-info -p 3260 <ip>",
    "iscsiadm -m discovery -t sendtargets -p <ip>:3260"
  ]
  custom_commands: []

sap_router:
  commands: []
  custom_commands: []

sql:
  commands: [
    "nmap --script=mysql-databases.nse,mysql-empty-password.nse,mysql-enum.nse,mysql-info.nse,mysql-variables.nse,mysql-vuln-cve2012-2122.nse <ip> -p <port>",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_version; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_authbypass_hashdump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/admin/mysql/mysql_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_hashdump; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_schemadump; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

oracle_web:
  commands: []
  custom_commands: []

rdp:
  commands: [
    "nmap --script \"rdp-enum-encryption or rdp-vuln-ms12-020 or rdp-ntlm-info\" -p <port> -T4 <ip>"
  ]
  custom_commands: []

distcc:
  commands: [
    "nmap -p <port> <ip> --script distcc-exec --script-args=\"distcc-exec.cmd=\'id\'\"",
    "msfconsole -q -x 'use exploit/unix/misc/distcc_exec; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

subversion:
  commands: [
    "nc -vn <ip> <port>",
    "svn ls svn://<ip>",
    "svn log svn://<ip>",
    "svn checkout svn://<ip>",
    "svn up -r 2"
  ]
  custom_commands: []

epmd:
  commands: [
    "nmap -sV -Pn -n -T4 -p 4369 --script epmd-info <ip>"
  ]
  custom_commands: []

cisco_smart_install:
  commands: []
  custom_commands: [
    "python <path>/SIETpy3/siet.py -g -i <ip>"
  ]

docker_registry:
  commands: []
  custom_commands: []

adb:
  commands: []
  custom_commands: []

postgresql:
  commands: []
  custom_commands: []

redshift:
  commands: [
    "aws redshift describe-clusters"
  ]
  custom_commands: []

vnc:
  commands: [
    "nmap -sV --script vnc-info,realvnc-auth-bypass,vnc-title -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/vnc/vnc_none_auth; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

winrm:
  commands: []
  custom_commands: []

x11:
  commands: [
    "nmap -sV --script x11-access -p <port> <ip>",
    "msfconsole -x -q 'use auxiliary/scanner/x11/open_x11; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

redis:
  commands: [
    "nmap --script redis-info -sV -p 6379 <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/redis/redis_server; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

apache_jserv:
  commands: [
    "nmap -sV --script ajp-auth,ajp-headers,ajp-methods,ajp-request -n -p <port> <ip>"
  ]
  custom_commands: []

influxdb:
  commands: []
  custom_commands: []

splunkd:
  commands: []
  custom_commands: []

bitcoin:
  commands: [
    "nmap -p <port> --script bitcoin-info --script bitcoin-getaddr <ip>",
    "nmap -p <port> --script bitcoin-getaddr <ip>"
  ]
  custom_commands: []

hypersql_db:
  commands: []
  custom_commands: []

apache_casandra:
  commands: [
    "nmap -sV --script cassandra-info -p <port> <ip>"
  ]
  custom_commands: []

raw_printing:
  commands: [
    "nmap -sV --script pjl-ready-message -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_env_vars; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_list_dir; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_list_volumes; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_ready_message; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_version_info; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_download_file; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_upload_file; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/printer/printer_delete_file; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

elastic_search:
  commands: [
    "msfconsole -q -x 'use auxiliary/scanner/elasticsearch/indices_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

adac:
  commands: []
  custom_commands: []

ndmp:
  commands: [
    "nmap -n -sV --script \"ndmp-fs-info or ndmp-version\" -p <port> <ip>"
  ]
  custom_commands: []

memcache:
  commands: [
    "nmap -n -sV --script memcached-info -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/gather/memcached_extractor; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/scanner/memcached/memcached_amp; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

rabbit_mq_management:
  commands: []
  custom_commands: []

gluster_fs:
  commands: [
    "gluster --remote-host=<ip> volume list"
  ]
  custom_commands: []

mongo_db:
  commands: [
    "nmap -sV --script \"mongo* and default\" -p <port> <ip>"
  ]
  custom_commands: []

tiller:
  commands: []
  custom_commands: []

jenkins:
  commands: []
  custom_commands: []


# UDP based ports #
dhcp:
  commands: []
  custom_commands: []

tftp:
  commands: [
    "nmap -n -Pn -sU -p <port> --script tftp-enum",
    "msfconsole -q -x 'use auxiliary/admin/tftp/tftp_transfer_until; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

kerberos_v5_passwd_udp:
  commands: []
  custom_commands: []

ipsec_ike_vpn:
  commands: []
  custom_commands: []

ruserd:
  commmands: [
    "rusers -l <ip>"
  ]
  custom_commands: []

ws_discovery:
  commands: []
  custom_commands: []

kerberos_v5_ticket_udp:
  commands: []
  custom_commands: []

mdns:
  commands: [
    "nmap -Pn -sUC -p5353 <ip>"
  ]
  custom_commands: [
    "python <path>/Pholus/pholus3.py eth0 -rq -stimeout 10"
  ]

bacnet:
  commands: [
    "nmap --script bacnet-info --script-args full=yes -sU -n -sV -p <port> <ip>"
  ]
  custom_commands: []


# TCP/UDP based ports #
wins:
  commands: []
  custom_commands: []

dns:
  # TODO: potentially add dnsrecon
  commands: [
    "nslookup <ip>",
    "dig axfr @<ip> && dix axfr @<ip> <domain> && fierce -dns <domain>",
    "dig -t _gc._<domain> && dig -t _ldap._<domain> && dig -t _kerberos._<domain> && dig -t _kpasswd._<domain>",
    "nmap --script dns-srv-enum --script-args \"dns-srv-enum.domain=<ip>\"",
    "msfconsole -q -x 'use auxiliary/scanner/dns/dns_amp; set RHOSTS <ip>; set RPORT <port>; run; exit'",
    "msfconsole -q -x 'use auxiliary/gather/enum_dns; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

kerberos_v5_ticket:
  # TODO: manually add other commands checking syntax and make sure they are installed or add to readme
  commands: [
    "nmap -p <port> --script=krb5-enum-users --script-args krb5-enum-users.realm=\"<domain>\",userdb=<username wordlist> <ip>"
  ]
  custom_commands: []

rpc:
  commands: [
    "whois -h <domain> -p 43 && echo <domain> | nc -vn <ip> 43",
    "nmap -sSUC -p <port> <ip>"
  ]
  custom_commands: []

ntp:
  commands: [
    "nmap -sU -sV --script \"ntp* and (discovery or vuln) and not (dos or brute)\" -p <port> <ip>",
    "ntpq -c readlist <ip>",
    "ntpq -c readvar <ip>",
    "ntpq -c peers <ip>",
    "ntpq -c associations <ip>",
    "ntpdc -c monlist <ip>",
    "ntpdc -c listpeers <ip>",
    "ntpdc -c sysinfo <ip>"
  ]
  custom_commands: []

msrpc:
  commands: []
  custom_commands: []

netbios:
  commands: [
    "nmblookup -A <ip>",
    "nbtscan <ip>/30",
    "nmap -sU -sV -T4 --script nbstat.nse -p <port> -Pn -n <ip>"
  ]
  custom_commands: []

snmp:
  commands: [
    "snmp-check <ip>",
    "nmap --script \"snmp* and not snmp-brute\" <ip>"
  ]
  custom_commands: []

irc:
  commands: [
    "nc -vn <ip> <port>",
    "openssl s_client -connect <ip>:<port> -quiet",
    "nmap -sV --script irc-botnet-channels,irc-info,irc-unrealircd-backdoor -p <port> <ip>"
  ]
  custom_commands: []

ldap:
  commands: [
    "nmap -p <port> --script ldap-search -Pn <ip>",
    "ldapsearch -H ldap://<ip> -x",
    "ldapsearch -H ldap://<ip> -x -s base namingcontexts"
  ]
  custom_commands: []

ipmi:
  commands: [
    "nmap -sU --script ipmi-version -p <port> <ip>",
    "msfconsole -q -x 'use  auxiliary/scanner/ipmi/ipmi_version; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

kerberos_v4_ticket:
  commands: []
  custom_commands: []

kerberos_v4_admin:
  commands: []
  custom_commands: []

socks_proxy:
  commands: [
    "nmap -p <port> <ip> --script socks-auth-info"
  ]
  custom_commands: []

oracle_agent:
  commands: []
  custom_commands: []

nfs:
  commands: [
    "nmap --script=nfs-ls.nse,nfs-showmount.nse,nfs-statfs.nse -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/nfs/nfsmount; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

rsip:
  commands: []
  custom_commands: []

kibana:
  commands: []
  custom_commands: []

rabbit_mq:
  commands: [
    "nmap -sV -Pn -n -T4 -p <port> --script amqp-info <ip>"
  ]
  custom_commands: []

couchdb:
  commands: [
    "nmap -sV -Pn -n --script couchdb-databases,couchdb-stats -p <port> <ip>",
    "msfconsole -q -x 'use auxiliary/scanner/couchdb/couchdb_enum; set RHOSTS <ip>; set RPORT <port>; run; exit'"
  ]
  custom_commands: []

ethernet_ip:
  commands: [
    "nmap -n -sV --script enip-info -p <port> <ip>",
    "python3 -m cpppo.server.enip.list_services [--udp] [--broadcast] --list-identity -a <ip>"
  ]
  custom_commands: []