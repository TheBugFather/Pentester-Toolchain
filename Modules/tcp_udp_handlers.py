""" Built-in modules """
from pathlib import Path
from queue import Queue


def wins_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through wins commands from yaml file #
    for command in config.wins:
        pass


def dns_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through dns commands from yaml file #
    for command in config.dns:
        pass


def kerbv5_ticket_handler(ip_addr: str, path: Path, port_num: int, config: object,
                          log_queue: Queue):
    # Iterate through kerberos v5 ticket commands from yaml file #
    for command in config.kerberos_v5_ticket:
        pass


def rpc_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through rpc commands from yaml file #
    for command in config.rpc:
        pass


def ntp_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through ntp commands from yaml file #
    for command in config.ntp:
        pass


def msrpc_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through msrpc commands from yaml file #
    for command in config.msrpc:
        pass


def netbios_name_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through netbios name commands from yaml file #
    for command in config.netbios_name:
        pass


def netbios_sesh_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through netbios session commands from yaml file #
    for command in config.netbios_sesh:
        pass


def snmp_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through snmp commands from yaml file #
    for command in config.snmp:
        pass


def ldap_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through ldap commands from yaml file #
    for command in config.ldap:
        pass


def kerbv4_ticket_handler(ip_addr: str, path: Path, port_num: int, config: object,
                          log_queue: Queue):
    # Iterate through kerberos v5 ticket commands from yaml file #
    for command in config.kerberos_v4_ticket:
        pass


def kerbv4_admin_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through kerberos v4 admin commands from yaml file #
    for command in config.kerberos_v4_admin:
        pass


def windomain_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through windows domain commands from yaml file #
    for command in config.windomain_indicator:
        pass


def oracle_agent_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through oracle agent commands from yaml file #
    for command in config.oracle_agent:
        pass


def nfs_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through nfs commands from yaml file #
    for command in config.nfs:
        pass


def globalcat_ldap_handler(ip_addr: str, path: Path, port_num: int, config: object,
                           log_queue: Queue):
    # Iterate through globalcat ldap commands from yaml file #
    for command in config.globalcat_ldap:
        pass


def upnotifyp_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through upnotifyp commands from yaml file #
    for command in config.upnotifyp:
        pass


def rsip_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through rsip commands from yaml file #
    for command in config.rsip:
        pass


def wsdapi_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through wsdapi commands from yaml file #
    for command in config.wsdapi:
        pass


def dfsr_handler(ip_addr: str, path: Path, port_num: int, config: object, log_queue: Queue):
    # Iterate through dfsr commands from yaml file #
    for command in config.dfsr:
        pass


def wrms_handler(ip_addr: str, path: Path, port_num: int, config: obj, log_queue: Queue):
    # Iterate through wrms commands from yaml file #
    for command in config.wrms:
        pass
